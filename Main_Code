##########################################################################################################################################
############################################# THERESA's UNIT CELL CREATION 19/04/2021 ####################################################
##########################################################################################################################################

from ase import Atoms 
from ase.build import bulk 
from ase.spacegroup import crystal
from ase.visualize import view


#Se_atom = Atoms('Se')
# atomic position parameter x_1 = 0.2254
#alpha = 90
#beta = 90
#gamma = 120
#a  = 4.3662  #this is same as b 
#c = 4.954 #these two worked ok

a= 4.519 # from materials project
c = 5.050
#hexagonalSe = crystal(('Se','Se'),[(0.5,0.866,0.3),(0.5,0.866,0.6)], spacegroup = 152, cellpar = [a,a,c,90,90,120])
hexagonalSe = crystal(('Se','Se'),[(0.7808,0.7808,0.0),(0.2192,0.0,0.3)], spacegroup = 152, cellpar = [a,a,c,90,90,120])
#works mostly ok except for yz plane
view(hexagonalSe)
#Se.set_positions([(4.311,0.0,0.0) , (-2.155, 3.733, 0.0), (0.0, 0.0, 5.071)])

##########################################################################################################################################
from ase import Atoms 
from ase.build import bulk 
from ase.spacegroup import crystal
from ase.visualize import view

#THIS ONE AGREES WITH KARSTEN'S DATABASE


a= 4.519 # from materials project
c = 5.050
#hexagonalSe = crystal(('Se','Se'),[(0.5,0.866,0.3),(0.5,0.866,0.6)], spacegroup = 152, cellpar = [a,a,c,90,90,120])
hexagonalSe = crystal(['Se','Se','Se'],[(0.,0.2192,0.6),(0.2192,0.,0.3),(0.7808,0.7808,0)], spacegroup = 152, cellpar = [a,a,c,90,90,120])
view(hexagonalSe)

##########################################################################################################################################
################################ Pedro's CREATION AND UNIT CELL OPTIMIZATION WITH KARSTEN'S FILE 20/04/2021 ##############################
##########################################################################################################################################

################################################################################################################################
############################################################# PBE ##############################################################
################################################################################################################################
## PROJECT WITH KARSTEN'S FILE 
import numpy as np
from ase.io import read
from ase.calculators.emt import EMT
from gpaw import GPAW, PW
from ase.optimize.bfgs import BFGS
from ase.constraints import UnitCellFilter
from ase import Atoms 
from ase.build import bulk 
from ase.spacegroup import crystal
from ase.visualize import view


## PBE Optimization 
TrigSe = read('oqmd123-2736.json') #Import the data (unit cell)
TrigSe.calc = GPAW(mode=PW(340), kpts=(2, 2, 2), xc='PBE', txt='test1.txt')  #Cutoff at 25Ry.

a = np.linalg.norm(TrigSe.cell[0]) * 2**0.5
E_TrigSeI1 = TrigSe.get_potential_energy()
print(f'Relaxed lattice parameter: a = {a} Ang')
print(f'Final Total Energy: E = {E_TrigSeI1} eV')

##Optimization
uf = UnitCellFilter(TrigSe)
relax = BFGS(uf)
relax.run(fmax=0.05) #Makes sure all atomic forces are below 0.05eV Angstrom 

E_TrigSeF1 = TrigSe.get_potential_energy()
b = np.linalg.norm(TrigSe.cell[0]) * 2**0.5
print(f'Relaxed lattice parameter: a = {b} Ang')
print(f'Final Total Energy: E = {E_TrigSeF1} eV')

################################################################################################################################
############################################################# PBE+D3 ###########################################################
################################################################################################################################
##PROJECT WITH KARSTEN'S FILE 
import numpy as np
from ase.io import read
from ase.calculators.emt import EMT
from gpaw import GPAW, PW
from ase.optimize.bfgs import BFGS
from ase.constraints import UnitCellFilter
from ase import Atoms 
from ase.build import bulk 
from ase.spacegroup import crystal
from ase.visualize import view
from ase.calculators.dftd3 import DFTD3


## PBE+D3 Optimization 
TrigSe = read('oqmd123-2736.json') #Import the data (unit cell)
dft = GPAW(mode=PW(340), kpts=(2, 2, 2), xc='PBE', txt='test1.txt')  #Cutoff at 25Ry.
d3 = DFTD3(dft=dft)
TrigSe.calc = d3
E_TrigSeI = TrigSe.get_potential_energy()
a = np.linalg.norm(TrigSe.cell[0]) * 2**0.5
print(f'Initial lattice parameter: a = {a} Ang')
print(f'Initial Total Energy: E = {E_TrigSeI} eV')

##Optimization
uf = UnitCellFilter(TrigSe)
relax = BFGS(uf) 
relax.run(fmax=0.05) #Makes sure all atomic forces are below 0.05eV Angstrom 

E_TrigSeF = TrigSe.get_potential_energy()
b = np.linalg.norm(TrigSe.cell[0]) * 2**0.5
print(f'Relaxed lattice parameter: a = {b} Ang')
print(f'Final Total Energy: E = {E_TrigSeF} eV') 





###################################################################################################################################
####################### CREATING BULK STRUCTURES & WORKING UNIT CELL FROM SCRATCH 22/04/21 ####################################
from ase.build import cut
from ase import Atoms
a= 4.519 # from materials project
c = 5.050
Se3 = Atoms('Se3',
              cell=[a, a, c, 90, 90, 120],
              pbc=(1, 1, 1),
              scaled_positions=[(0.,0.2192,0.6667),
                                (0.2192,0.0,0.3333),
                                (0.7808,0.7808,0.)]
             )
from ase.visualize import view
view(Se3)
-----------------------------------------------
#uses Pedtro's TrigSe from karsten's json
#repeats the unit cell
bulktrigse = TrigSe.repeat((2,2,2)) #too big for 4,3,3 
view(bulktrigse)

#creates a slab
trigse111 = cut(TrigSe, (1,0,0), (0,1,0), nlayers=10)
view(trigse111)



